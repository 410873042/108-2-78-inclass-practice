---
title: '4.1'
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.




```{r}
  `.台北市預報元素值` <- 
  list(
    city="台北市",
    high=25,
    low=18
  )
`.新北市預報元素值` <- 
  list(
    city="新北市",
    high=24,
    low=15
  )

library(lubridate)
`今明天氣` <-
  list(
    `今天日期`=ymd("2020-03-31"),
    `明天天氣`=ymd("2020-04-01"),
    `各地預報`=list(
      `.台北市預報元素值`,
      `.新北市預報元素值`
      )

  )
str(`今明天氣`)
```
```{r}
# 有多少名字可選：
names(listExample)
```
```{r}
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
```
```{r}
listExample[["student"]]
listExample$student

listExample[["學期"]] # 小心不是反頓點喔。
listExample$`學期`
```

```{r}
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2

# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
```
```{r}
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
```
 # 4.1.3
 
```{r}
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2

# 相當於
numVector[c(1,4)][[1]]
```
```{r}
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2

# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
```
#例題1
```{r}
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
```
```{r}
econOnly <- majors[c(T,T,F,F,T)];econOnly
econames <- names[c(1,2,5)];econames
econgender <- gender[c(1,2,5)];econgender
econFemaleOnly <- econgender[c(T,T,F)];econFemaleOnly
econFemale <- names[c(1,2,5)][c(1,2)];econFemale
```
#例題2:
```{r}
listExample <- 
  list(
    student="小明",
    `學期`=list(
      `108-1`=list(
        list(
          name="個體經濟學",
          teacher="Alice",
          grade=85
        )
      ),
      `108-2`=list(
        list(
          name="總體經濟學",
          teacher="Mark",
          grade=78
        )
      )
    )
  )
# 有多少位置可選：
length(listExample)
```
```{r}
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
```

```{r}
get1$`108-1` -> get1_layer1;get1_layer1
str(get1_layer1)
```
```{r}
get1_layer1[[1]] -> get1_layer2
str(get1_layer2)
```
```{r}
get1_layer2$teacher  #layer2才有3 list
```
```{r}
get1$`108-1`[[1]]$teacher  #簡式
#相當於
listExample[["學期"]]$`108-1`[[1]]$teacher
```
```{r}
str(get2)
```
```{r}
get2 <-listExample["學期"]
get2_layer1 <- get2[[1]]
get2_layer2 <- get2_layer1[["108-1"]]
get2_layer3 <- get2_layer2[[1]]
get2_layer3$teacher
```
```{r}
listExample["學期"][[1]][["108-1"]][[1]]$teacher
listExample["學期"][["學期"]][["108-1"]][[1]]$teacher
```
#list應用
```{r}
vector <- c(a=1,b=2,c=3)
vector[["a"]]
vector[c("a","c")]   #$只能用在list
```
```{r}
list1 <- list(a=1,b=2,c=3)
list1[["a"]]
list1[c("a","b")]
list1$a
```
```{r}
today <- list(
  list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
  list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
tomorrow <- list(
  list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
  list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))

weather <- list(today,tomorrow)

print(weather)
str(today)
str(tomorrow)
```
#修改
```{r}
today <- list(
  list("台北市",
       highest_temp=c(highest_temp = 25),
       lowest_temp=c(lowest_temp = 18)),
  list("新北市",
       highest_temp=c(highest_temp = 24),
       lowest_temp=c(lowest_temp = 15)))
tomorrow <- list(
  list("台北市",
       highest_temp=c(highest_temp = 25),
       lowest_temp=c(lowest_temp = 18)),
  list("新北市",
       highest_temp=c(highest_temp = 24),
       lowest_temp=c(lowest_temp = 15)))

weather <- list(today,tomorrow)

str(weather)
```
#4.2
```{r}
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
a[[7]] <- "Johnson"
a
#相當於
a <- c(a,("Mary"))
a
```
```{r}
library(lubridate)
list1 <- 
  list(
    list(
      name="Jack",
      birthday=ymd("1998-03-21"),
      status=c(height=177, weight=80)
    )
  )

str(list1)
```
#修改後
```{r}
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")

# 新增資料
list1[[2]] <- list(
  name="Mary",
  birthday=ymd("1998-08-24")
)

str(list1)
```
```{r}
list1[[2]]$status <- c(height=163,weight=45) 
list1[[1]]$status[["height"]] <- 176
str(list1)
```
```{r}
list1[[1]][["age"]] <- 21
list1[[2]]["age"] <- list(21)

# 改變「一個」時，使用[[ ]]比較不會錯。
str(list1)
```
#練習
```{r}
listExample <- 
  list(
    student="小明",
    `學期`=list(
      `108-1`=list(
        list(
          name="個體經濟學",
          teacher="Alice",
          grade=85
        )
      ),
      `108-2`=list(
        list(
          name="總體經濟學",
          teacher="Mark",
          grade=78
        )
      )
    )
  )
str(listExample)
```
```{r}
listExample[["學期"]]$`108-1`[[2]]<- list(name="產業經濟學")
listExample[["學期"]]$`108-1`[[2]][c("teacher","grade")] <-list("Wen",88)
str(listExample)
```
```{r}
list1[[1]][c("bloodType","registered")] <- list("AB",TRUE)

str(list1)
```
```{r}
print(a)
a[-c(1,3)]
a[c(-2)]

print(a)
a[-c(1,3)] -> a # 要回存才算真的刪除
```
#練習
```{r}
library(lubridate)
list1 <- 
  list(
    list(
      name="Jack",
      birthday=ymd("1998-03-21"),
      status=c(height=177, weight=80)
    ),
    list(
      name="Mary",
      birthday=ymd("1998-08-24"),
      status=c(height=163, weight=45),
      age=21,
      bloodType="AB"
    )
  )
str(list1)
```
```{r}
list1[[1]][-c(3)]->list1[[1]]
str(list1)
```
```{r}
list1[[2]][-c(3,5)]->list1[[2]]
str(list1)
```
```{r}
str(list1)
list1[[2]][c(1,2)] <- NULL
str(list1)
```