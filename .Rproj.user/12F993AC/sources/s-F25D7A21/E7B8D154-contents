---
title: "Untitled"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.

```{r}
"我的年紀" <- 20
my_age <- "我的年紀"
```
```{r}
num <- 1
num1 <- c(2,3)
num3 <- c(4,num)
total <- c(num1,num3)
```
```{r}
num1 <- 5
num2 <- c(5)
```
```{r}
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-1,5,2,3)
vNum5 <- c(c(-1,5),c(2,3))
```
```{r}
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum4 <- c() # 空向量
```
```{r}
vNum3 <- c(vNum2, vNum1)
vNum4 <- c(vNum4, vNum1) # 向量疊代 （recursive vector concatenate）
```
```{r}
num1<-5 # 非整數
num2<-5L # 整數

num1Vector<-c(5,6,7)
num2Vector<-c(5L,6L,7L)
```
```{r}
char1<-"你好"
char2<-'你好'
```
```{r}
char1Vector<-c("你好","How are you?")
```
```{r}
dialogue <- c('小明說："明天不用上課。"',
               '小花說："真的嗎？"')

cat(dialogue, sep="\n")
```
```{r}
dialogue1 <- c('姊姊說：不想讀書。',
               '妹妹說：我也是。')
cat(dialogue1,sep = "\n")
```
```{r}
library(httr)
library(dplyr)
GET("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits") %>%
  content() %>%
  View()
```
```{r}
dialogue2 <- c("小明說：'明天不用上課。'",
                "小華說：'真的嗎？'")
cat(dialogue2,sep = "\n")
```
```{r}
library(httr)
library(dplyr)
GET("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits") %>%
  content() %>%
  View()
```
```{r}
library(googlesheets4)
`出席狀況表單網址` <-  c("https://drive.google.com/open?id=1oB-5hj1pO5g8FMpZbA7RgIG8NvCRx6WvLPwvleCEV4Q&authuser=0")# 缺乏定義值
```
```{r}
logi1 <- c(T,TRUE,F,FALSE,FALSE)
```
```{r}
# 加總向量內的所有元素值。
sum(logi1)
```
```{r}
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)

typeof(num)
typeof(int)
typeof(char)
typeof(logi)
```
```{r}
class(num)
class(int)
class(char)
class(logi)
```
```{r}
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)

typeof(num)
typeof(int)
typeof(char)
typeof(logi)
class(num)
class(int)
class(char)
class(logi)
```
```{r}
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')

typeof(majors10_char)
class(majors10_char)
```
```{r}

# 或
majors10_factor <- factor(
  c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)

typeof(majors10_factor)
class(majors10_factor)
```
```{r}
as.integer(majors10_factor) 
```
```{r}
levels(majors10_factor)
```
```{r}
family_factor<- factor(c("爸","媽","姊","媽","姊","爸"))

typeof(family)
class(family)
```
```{r}
as.integer(family_factor)
```
```{r}
levels(family_factor)
```
```{r}
stringInteger <- c("1","2","-11")
class(stringInteger) # 無法進行數值運算
stringInteger+2
```
```{r}
trueInteger <- as.integer(stringInteger)
class(trueInteger) # 可以進行數值運算
typeof(trueInteger)
trueInteger+2
```
```{r}
char3 <- c("2","1","3")
ah<- as.integer(char3)
ah+2
```
```{r}
as.integer(stringInteger)
class(stringInteger)
```
```{r}
stringInteger <- as.integer(stringInteger)
class(stringInteger)
```
```{r}
studentId <- c(410773002, 410773015)
class(studentId)
```
```{r}
library(lubridate)
```
```{r}
tpeTime <- ymd_hms("2020-03-18 13:52:40",
        tz="Asia/Taipei")
```
```{r}
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
        tz="Asia/Taipei")
```
```{r}
tpeTime <- lubridate::ymd_hms("2020-03-18 13:52:40",
        tz="Asia/Taipei")
```
```{r}
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
                  tz="Europe/Lisbon")
```
```{r}
tpeTime <- c("2020-03-18 13:52:40",
             "2020-03-11 03:12:40")
tpeTime <- 
  ymd_hms(
    tpeTime, # 呼叫tpeTime向量值
    tz="Asia/Taipei"
    )
```
```{r}
tpeTime <- 
  ymd_hms(
    c("2020-03-18 13:52:40","2020-03-11 03:12:40"),
    tz="Asia/Taipei"
    )
```
```{r}
ymd_hms(
c("2020-03-18 13:52:40","2020-03-11 03:12:40")
)
```
```{r}
ymd_hms("2020-03-11T06:56:17Z")
```
```{r}
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
```
```{r}
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
```
```{r}
with_tz(tpeTime, tzone="Europe/Paris")
with_tz(pgTime, tzone="Europe/Paris")
```
```{r}
ymd_hms(2020-03-18 13:52:40, tz="Asia/Taipei")
with_tz(, tzone="Asia/Taipei")
```
```{r}

```




